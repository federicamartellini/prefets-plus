{% extends "base.html.twig" %}

{% block titre_onglet %}Mes Contacts - Prefet +{% endblock %}

{% block titre_page %}
Gestion des Contacts <br>
<span class="text-muted">Gérez vos relations professionnelles</span>
{% endblock %}

{% block contenu %}
<div class="container mt-4">
    <div class="row">
        <!-- Section des demandes d'amitié -->
        {% if contactRequests|length > 0 %}
            <div class="col-12 mb-4">
                <div class="card shadow-sm">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-envelope-heart"></i> Demandes d'amitié en attente
                            <span class="badge bg-primary">{{ contactRequests|length }}</span>
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="list-group">
                            {% for request in contactRequests %}
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-0">{{ request.from.prenom }} {{ request.from.nom }}</h6>
                                        <small class="text-muted">{{ request.from.region }}</small>
                                    </div>
                                    <div class="btn-group">
                                        <button class="btn btn-success btn-sm" onclick="accepterDemande('{{ request._id }}')">
                                            <i class="bi bi-check-lg"></i> Accepter
                                        </button>
                                        <button class="btn btn-danger btn-sm" onclick="refuserDemande('{{ request._id }}')">
                                            <i class="bi bi-x-lg"></i> Refuser
                                        </button>
                                    </div>
                                </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        {% endif %}

        <!-- Liste des contacts actuels -->
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">Mes contacts</h5>
                </div>
                <div class="card-body">
                    {% if contacts|length > 0 %}
                        <div class="list-group">
                        {% for contact in contacts %}
                            <div class="list-group-item d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="mb-0">{{ contact.prenom }} {{ contact.nom }}</h6>
                                    <small class="text-muted">{{ contact.region }}</small>
                                </div>
                                <button class="btn btn-success btn-sm" disabled>
                                    <i class="bi bi-people-fill"></i> Amis
                                </button>
                            </div>
                        {% endfor %}
                        </div>
                    {% else %}
                        <p class="text-muted text-center">Vous n'avez pas encore de contacts.</p>
                    {% endif %}
                </div>
            </div>
        </div>

        <!-- Liste des préfets disponibles -->
        <div class="col-md-6 mb-4">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">Préfets disponibles</h5>
                </div>
                <div class="card-body">
                    {% if prefets|length > 0 %}
                        <div class="list-group">
                        {% for prefet in prefets %}
                            {% if prefet._id != user._id and not (prefet._id in contactIds) %}
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <h6 class="mb-0">{{ prefet.prenom }} {{ prefet.nom }}</h6>
                                        <small class="text-muted">{{ prefet.region }}</small>
                                    </div>
                                    {% if prefet._id in pendingRequestIds %}
                                        <button class="btn btn-warning btn-sm" disabled>
                                            <i class="bi bi-clock"></i> Envoyé
                                        </button>
                                    {% else %}
                                        <button class="btn btn-outline-primary btn-sm" 
                                                onclick="ajouterContact('{{ prefet._id }}', this)">
                                            <i class="bi bi-person-plus"></i> Ajouter
                                        </button>
                                    {% endif %}
                                </div>
                            {% endif %}
                        {% endfor %}
                        </div>
                    {% else %}
                        <p class="text-muted text-center">Aucun préfet disponible.</p>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function ajouterContact(prefetId, button) {
    fetch(`/contacts/add/${prefetId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.message) {
            // Changer l'apparence du bouton
            button.className = 'btn btn-warning btn-sm';
            button.disabled = true;
            button.innerHTML = '<i class="bi bi-clock"></i> Envoyé';
            
            // Feedback visuel temporaire
            const toast = document.createElement('div');
            toast.className = 'position-fixed top-0 end-0 p-3';
            toast.style.zIndex = '1050';
            toast.innerHTML = `
                <div class="toast show" role="alert">
                    <div class="toast-header bg-warning text-white">
                        <strong class="me-auto">Demande envoyée</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body">
                        Votre demande d'amitié a été envoyée avec succès !
                    </div>
                </div>
            `;
            document.body.appendChild(toast);
            
            // Supprimer le toast après 3 secondes
            setTimeout(() => {
                toast.remove();
            }, 3000);
        }
    })
    .catch(error => {
        console.error('Erreur:', error);
        alert('Une erreur est survenue lors de l\'envoi de la demande');
    });
}

function accepterDemande(requestId) {
    fetch(`/contacts/accept/${requestId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
        if (data.message) {
            // Toast de confirmation
            const toast = document.createElement('div');
            toast.className = 'position-fixed top-0 end-0 p-3';
            toast.style.zIndex = '1050';
            toast.innerHTML = `
                <div class="toast show" role="alert">
                    <div class="toast-header bg-success text-white">
                        <strong class="me-auto">Demande acceptée</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body">
                        Vous êtes maintenant amis !
                    </div>
                </div>
            `;
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.remove();
                location.reload();
            }, 2000);
        }
    })
    .catch(error => {
        console.error('Erreur:', error);
        alert('Une erreur est survenue');
    });
}

function refuserDemande(requestId) {
    if (confirm('Êtes-vous sûr de vouloir refuser cette demande d\'amitié ?')) {
        fetch(`/contacts/reject/${requestId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.message) {
                location.reload();
            }
        })
        .catch(error => {
            console.error('Erreur:', error);
            alert('Une erreur est survenue');
        });
    }
}
</script>
{% endblock %}